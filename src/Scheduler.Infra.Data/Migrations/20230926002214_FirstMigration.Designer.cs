// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Scheduler.Infra.Data.Context;

#nullable disable

namespace Scheduler.Infra.Data.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20230926002214_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Scheduler.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Appointment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3071fb3-aafc-4f06-9107-b29281354266"),
                            ClientId = new Guid("5748500f-98f9-460b-8aaf-a39591065aec"),
                            CreatedDate = new DateTime(2023, 9, 25, 21, 22, 14, 717, DateTimeKind.Local).AddTicks(2043),
                            IsDeleted = false,
                            ScheduledDate = new DateTime(2023, 9, 29, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a5a8621f-0930-4199-b0a8-e43ca5d89b74"),
                            ClientId = new Guid("5748500f-98f9-460b-8aaf-a39591065aec"),
                            CreatedDate = new DateTime(2023, 9, 25, 21, 22, 14, 717, DateTimeKind.Local).AddTicks(2115),
                            IsDeleted = false,
                            ScheduledDate = new DateTime(2023, 10, 15, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4e7fe69c-7e2e-4fb8-bc1a-4fe91b38d597"),
                            ClientId = new Guid("5748500f-98f9-460b-8aaf-a39591065aec"),
                            CreatedDate = new DateTime(2023, 9, 25, 21, 22, 14, 717, DateTimeKind.Local).AddTicks(2123),
                            IsDeleted = false,
                            ScheduledDate = new DateTime(2023, 10, 30, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Scheduler.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5748500f-98f9-460b-8aaf-a39591065aec"),
                            CreatedDate = new DateTime(2023, 9, 25, 21, 22, 14, 717, DateTimeKind.Local).AddTicks(1957),
                            Email = "email@email.com",
                            IsDeleted = false,
                            Name = "João da Silva"
                        });
                });

            modelBuilder.Entity("Scheduler.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Scheduler.Domain.Entities.Client", "Client")
                        .WithMany("Appointments")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Scheduler.Domain.Entities.Client", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
